# Kaspa Transaction Generator Configuration
# Copy this file to .env and fill in your values

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# Your private key in hex format (REQUIRED)
# Generate using local wallet generator via command: kaspa-tx-generator --generate-wallets
PRIVATE_KEY_HEX=ENTER_YOUR_PRIVATE_KEY_HERE

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Network to use: mainnet or testnet10
KASPA_NETWORK=mainnet

# gRPC endpoint (automatically set based on network, but can be overridden)
# Mainnet: grpc://n-mainnet.kaspa.ws:16110
# Testnet-10: grpc://n-testnet-10.kaspa.ws:16210
KASPA_GRPC_URL=grpc://n-mainnet.kaspa.ws:16110

# =============================================================================
# TRANSACTION PARAMETERS
# =============================================================================

# Target number of UTXOs to create for spam transactions
TARGET_UTXO_COUNT=100

# Amount per UTXO in sompi (100,000,000 sompi = 1 KAS)
AMOUNT_PER_UTXO=150000000

# Number of outputs per splitting transaction
OUTPUTS_PER_TRANSACTION=10

# Duration to run spam transactions in seconds (0 = run forever)
SPAM_DURATION_SECONDS=86400

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Target transactions per second
TARGET_TPS=50

# Remove safety cap (set to true only after verifying stability)
UNLEASHED=true

# Pacing tick interval in milliseconds
MILLIS_PER_TICK=10

# Base fee rate in sompi per gram
BASE_FEE_RATE=1

# Number of gRPC client connections in pool
CLIENT_POOL_SIZE=8

# How often to refresh UTXOs from node (seconds)
UTXO_REFRESH_SECS=1

# Minimum change amount to keep (sompi)
MIN_CHANGE_SOMPI=1000000

# Maximum age for pending transactions (seconds)
MAX_PENDING_AGE_SECS=3600

# =============================================================================
# WALLET GENERATION
# =============================================================================

# Number of wallets to generate (only used with --generate-wallets mode)
WALLET_COUNT=10

# =============================================================================
# LOGGING
# =============================================================================

# Rust log level: error, warn, info, debug, trace
RUST_LOG=info
